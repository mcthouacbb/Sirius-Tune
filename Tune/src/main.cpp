#include "eval_params.h"

#include "pos.h"
#include "optimize.h"
#include "extract.h"

#include <iostream>
#include <fstream>
#include <sstream>


EvalParams defaultParams = {
	{
		{
			  99,   55,   79,   55,   76,   74,   35,   44,
			  34,   92,   52,   42,   37,   88,   13,  -19,
			  29,  116,   17,   45,   -3,   52,   48,  -12,
			  -2,    2,   27,  -16,  -29,  -20,   -4,  -32,
			  21,    8,   -4,  -65,  -56,  -62,  -32,  -68,
			  -4,    9,  -56,  -65,  -69,  -51,  -21,  -34,
			  22,  -16,  -27,  -67,  -52,  -29,    9,    8,
			 -41,   15,   -3,  -52,    0,  -31,   23,   18,

			 817,  840,  880,  896,  914,  917,  854,  838,
			 829,  826,  833,  816,  831,  928,  881,  963,
			 833,  840,  857,  872,  886,  921,  947,  907,
			 828,  838,  845,  848,  850,  859,  847,  865,
			 839,  848,  845,  849,  855,  851,  860,  849,
			 842,  859,  850,  854,  849,  859,  860,  849,
			 839,  860,  858,  856,  858,  870,  871,  860,
			 855,  841,  848,  861,  845,  834,  817,  847,

			 446,  452,  459,  465,  486,  502,  456,  425,
			 412,  404,  436,  464,  437,  470,  481,  456,
			 412,  416,  418,  438,  451,  460,  472,  454,
			 387,  401,  419,  429,  412,  426,  438,  429,
			 387,  384,  385,  399,  403,  396,  413,  393,
			 381,  389,  402,  405,  406,  397,  416,  403,
			 375,  395,  394,  398,  398,  398,  411,  357,
			 393,  397,  409,  413,  412,  402,  377,  391,

			 294,  281,  306,  271,  226,  288,  321,  273,
			 287,  325,  306,  314,  331,  367,  332,  347,
			 301,  320,  356,  331,  369,  360,  363,  352,
			 292,  313,  329,  339,  339,  324,  322,  317,
			 307,  322,  323,  340,  341,  325,  326,  296,
			 333,  330,  329,  324,  326,  333,  324,  330,
			 307,  337,  324,  319,  320,  336,  346,  323,
			 321,  303,  313,  308,  300,  303,  314,  309,

			 101,  237,  255,  242,  314,  202,  186,  199,
			 231,  264,  344,  307,  352,  351,  303,  297,
			 282,  305,  311,  339,  363,  385,  347,  294,
			 299,  300,  299,  328,  307,  326,  293,  312,
			 281,  289,  301,  301,  306,  308,  297,  274,
			 275,  286,  303,  297,  307,  300,  306,  274,
			 272,  267,  287,  292,  291,  299,  288,  283,
			 244,  274,  250,  268,  267,  278,  271,  227,

			   0,    0,    0,    0,    0,    0,    0,    0,
			  77,   81,   72,   96,  114,  110,   63,   35,
			  41,   52,   72,   67,   80,  104,   62,   36,
			  54,   68,   62,   70,   78,   65,   56,   30,
			  41,   64,   60,   74,   69,   56,   52,   20,
			  47,   62,   65,   58,   69,   47,   77,   44,
			  44,   70,   54,   50,   58,   76,   90,   45,
			   0,    0,    0,    0,    0,    0,    0,    0,
		},
		{
			 -61,  -29,  -32,  -24,  -25,  -19,  -16,  -37,
			 -23,  -12,  -10,   -9,   -6,    1,   11,    2,
			 -18,  -12,    2,   -3,    7,    8,   14,    4,
			 -23,   -5,    2,   11,   12,   15,   10,    0,
			 -33,   -9,    5,   20,   21,   21,    7,   -1,
			 -28,   -9,   12,   20,   22,   17,    5,   -6,
			 -31,   -8,    4,   16,   14,    9,   -6,  -19,
			 -30,  -29,  -18,  -12,  -33,  -14,  -36,  -52,

			 715,  720,  705,  711,  697,  697,  704,  729,
			 712,  712,  729,  763,  747,  732,  731,  638,
			 692,  709,  730,  720,  750,  706,  683,  681,
			 700,  725,  717,  739,  755,  752,  739,  720,
			 705,  711,  718,  739,  730,  723,  720,  704,
			 683,  675,  722,  709,  725,  715,  718,  697,
			 699,  695,  697,  709,  710,  673,  668,  673,
			 686,  686,  689,  666,  698,  685,  692,  665,

			 387,  383,  382,  377,  370,  362,  372,  381,
			 386,  396,  388,  377,  378,  374,  367,  366,
			 384,  384,  383,  378,  370,  368,  366,  364,
			 386,  382,  384,  377,  380,  376,  367,  368,
			 381,  385,  388,  387,  383,  380,  369,  369,
			 376,  380,  376,  378,  378,  375,  364,  365,
			 380,  377,  381,  381,  379,  383,  373,  383,
			 377,  383,  382,  385,  379,  380,  387,  364,

			 205,  197,  196,  213,  215,  208,  194,  209,
			 204,  208,  214,  204,  209,  196,  206,  179,
			 216,  215,  211,  222,  206,  216,  205,  195,
			 221,  224,  221,  222,  220,  213,  215,  202,
			 206,  215,  225,  218,  219,  224,  205,  205,
			 199,  212,  219,  223,  230,  213,  205,  195,
			 204,  195,  201,  217,  218,  207,  203,  191,
			 191,  202,  196,  209,  208,  201,  192,  196,

			 194,  162,  183,  188,  172,  180,  179,  124,
			 181,  191,  179,  191,  173,  170,  173,  158,
			 182,  190,  210,  207,  185,  188,  174,  180,
			 188,  210,  215,  221,  219,  212,  211,  182,
			 193,  201,  218,  217,  223,  207,  193,  194,
			 181,  201,  198,  216,  212,  198,  192,  177,
			 175,  184,  190,  199,  202,  194,  184,  177,
			 159,  174,  190,  194,  188,  193,  173,  179,

			   0,    0,    0,    0,    0,    0,    0,    0,
			 219,  219,  203,  175,  165,  176,  209,  209,
			 156,  156,  143,  129,  117,  111,  136,  143,
			 100,   92,   82,   74,   69,   77,   89,   92,
			  82,   78,   66,   64,   68,   70,   79,   79,
			  75,   77,   65,   75,   73,   76,   77,   75,
			  83,   80,   81,   83,   82,   81,   78,   75,
			   0,    0,    0,    0,    0,    0,    0,    0,
		}
	}
};

constexpr int NUM_THREADS = 3;

int main()
{
	printParams(defaultParams, std::cout);

	extractMaterial(defaultParams);

	std::vector<ErrorThread> threadPool(NUM_THREADS);

    std::string outFile, inFile;
    std::string str;
    std::getline(std::cin, str);
    std::istringstream stream(str);
    stream >> inFile >> outFile;

    std::ifstream in(inFile);
    std::ofstream out(outFile);

    in.seekg(0, std::ios::end);
    size_t size = in.tellg();
    std::string epdString(size, '\0');
    in.seekg(0);
    in.read(epdString.data(), size);

	std::vector<Position> positions;
    {
        std::vector<EpdPos> epds = parseEpdFile(epdString);
        positions = getPositions(epds)
    }

    double kValue = computeKValue(threadPool, defaultParams, positions);
    std::cout << "Final kValue: " << kValue;

    localSearch(threadPool, kValue, defaultParams, positions, out);
}
