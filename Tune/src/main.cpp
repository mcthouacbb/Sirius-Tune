#include "eval_params.h"

#include "pos.h"
#include "optimize.h"
#include "extract.h"

#include <iostream>
#include <fstream>
#include <sstream>


EvalParams defaultParams = {
	{
		{
			 146,   77,   99,   95,  112,  100,   63,   64, 
			  47,  118,   77,   52,   60,  104,    2,  -29, 
			  51,  138,   29,   58,   -4,   73,   83,   -9, 
			  -4,    8,   37,   -6,  -22,  -19,    5,  -41, 
			  48,   37,   14,  -50,  -45,  -69,  -19,  -74, 
			   7,   23,  -61,  -71,  -80,  -56,  -10,  -33, 
			  41,  -13,  -22,  -73,  -58,  -26,   13,   11, 
			 -42,   30,    3,  -60,    6,  -34,   24,   20, 

			 983, 1004, 1051, 1068, 1089, 1100, 1024, 1009, 
			 998,  996,  995,  978,  987, 1118, 1049, 1158, 
			1007, 1009, 1030, 1050, 1061, 1104, 1131, 1084, 
			 995, 1007, 1014, 1016, 1021, 1028, 1012, 1038, 
			1007, 1014, 1013, 1017, 1027, 1018, 1033, 1015, 
			1008, 1030, 1017, 1024, 1019, 1032, 1035, 1020, 
			1006, 1027, 1030, 1027, 1033, 1045, 1048, 1030, 
			1026, 1009, 1017, 1033, 1013, 1000,  973, 1016, 

			 520,  526,  532,  543,  574,  583,  531,  514, 
			 485,  481,  515,  537,  512,  557,  565,  542, 
			 482,  483,  495,  513,  534,  546,  558,  522, 
			 452,  472,  496,  505,  489,  499,  513,  500, 
			 455,  448,  455,  470,  477,  471,  483,  461, 
			 448,  459,  469,  479,  477,  472,  494,  470, 
			 439,  462,  460,  469,  471,  478,  485,  419, 
			 464,  468,  482,  487,  491,  477,  437,  455, 

			 342,  330,  349,  318,  266,  331,  387,  321, 
			 339,  386,  361,  369,  386,  428,  377,  400, 
			 356,  371,  418,  392,  433,  418,  417,  408, 
			 341,  365,  390,  397,  395,  377,  376,  363, 
			 359,  376,  379,  398,  402,  378,  381,  346, 
			 389,  387,  386,  379,  383,  389,  379,  388, 
			 358,  394,  378,  370,  374,  398,  405,  378, 
			 375,  351,  365,  360,  349,  351,  368,  360, 

			 116,  272,  299,  284,  377,  228,  217,  233, 
			 269,  313,  411,  363,  418,  409,  349,  345, 
			 332,  358,  365,  399,  433,  457,  408,  345, 
			 352,  353,  355,  389,  361,  385,  343,  368, 
			 328,  337,  354,  351,  361,  363,  347,  318, 
			 320,  334,  354,  352,  360,  350,  359,  317, 
			 315,  311,  336,  339,  341,  356,  335,  334, 
			 284,  318,  290,  309,  311,  324,  315,  265, 

			  82,   82,   82,   82,   82,   82,   82,   82, 
			 101,  106,   88,  123,  140,  128,   78,   37, 
			  44,   69,   93,   86,  100,  138,   77,   50, 
			  62,   81,   75,   87,   99,   86,   81,   47, 
			  43,   75,   71,   89,   89,   79,   76,   32, 
			  51,   72,   76,   71,   88,   66,  108,   63, 
			  48,   82,   64,   60,   75,  102,  123,   65, 
			  82,   82,   82,   82,   82,   82,   82,   82, 
		},
		{
			 -79,  -32,  -36,  -29,  -28,  -16,  -15,  -44, 
			 -25,   -9,  -10,   -6,   -2,    9,   23,    9, 
			 -22,   -7,    7,    2,   15,   17,   21,   12, 
			 -25,   -2,    7,   17,   20,   26,   19,    7, 
			 -42,  -12,    8,   25,   27,   32,   11,    1, 
			 -33,   -9,   18,   28,   33,   26,    9,   -4, 
			 -37,   -7,    7,   24,   22,   15,    0,  -18, 
			 -36,  -35,  -17,  -10,  -36,  -13,  -30,  -57, 

			 944,  953,  944,  953,  935,  935,  935,  968, 
			 940,  942,  972, 1009, 1004,  970,  976,  853, 
			 915,  939,  968,  950,  993,  940,  911,  913, 
			 930,  958,  955,  980,  997,  994,  983,  956, 
			 933,  954,  955,  982,  967,  969,  957,  939, 
			 910,  904,  966,  939,  961,  947,  944,  922, 
			 933,  933,  925,  942,  931,  900,  889,  901, 
			 915,  913,  918,  893,  929,  916,  927,  882, 

			 519,  515,  516,  508,  498,  491,  501,  507, 
			 518,  529,  519,  511,  508,  501,  495,  492, 
			 515,  517,  512,  507,  497,  495,  494,  495, 
			 517,  512,  512,  508,  509,  505,  497,  497, 
			 510,  516,  517,  516,  511,  507,  496,  493, 
			 502,  507,  508,  505,  508,  497,  487,  491, 
			 506,  505,  512,  511,  506,  503,  498,  511, 
			 503,  514,  515,  517,  503,  499,  514,  486, 

			 277,  268,  270,  290,  293,  288,  265,  285, 
			 278,  285,  288,  279,  289,  271,  291,  248, 
			 292,  296,  288,  304,  282,  301,  285,  277, 
			 300,  306,  298,  305,  306,  292,  296,  282, 
			 282,  292,  305,  301,  299,  314,  281,  277, 
			 275,  291,  301,  307,  312,  294,  282,  268, 
			 281,  279,  281,  302,  301,  282,  282,  265, 
			 260,  277,  274,  284,  287,  281,  262,  270, 

			 250,  220,  248,  255,  233,  244,  242,  177, 
			 244,  255,  242,  261,  236,  242,  240,  217, 
			 247,  259,  285,  281,  254,  259,  246,  244, 
			 256,  284,  289,  298,  293,  286,  282,  251, 
			 262,  275,  293,  296,  297,  282,  266,  264, 
			 252,  271,  274,  289,  289,  272,  261,  249, 
			 245,  253,  259,  276,  273,  260,  254,  238, 
			 217,  242,  257,  268,  253,  263,  237,  237, 

			  94,   94,   94,   94,   94,   94,   94,   94, 
			 282,  278,  261,  224,  216,  231,  273,  271, 
			 206,  200,  185,  165,  153,  140,  178,  185, 
			 131,  120,  109,   95,   90,   95,  111,  115, 
			 111,  103,   87,   87,   83,   86,   97,   98, 
			 101,  101,   88,   97,   94,   91,   93,   93, 
			 113,  104,  108,  104,  104,   98,   96,   93, 
			  94,   94,   94,   94,   94,   94,   94,   94, 
		},
	}
};

constexpr int NUM_THREADS = 3;

int main()
{
	printParams(defaultParams, std::cout);

	extractMaterial(defaultParams);

	std::vector<ErrorThread> threadPool(NUM_THREADS);

    std::string outFile, inFile;
    std::string str;
    std::getline(std::cin, str);
    std::istringstream stream(str);
    stream >> inFile >> outFile;

    std::ifstream in(inFile);
    std::ofstream out(outFile);


	std::vector<Position> positions;
    {
        in.seekg(0, std::ios::end);
        size_t size = in.tellg();
        std::string epdString(size, '\0');
        in.seekg(0);
        in.read(epdString.data(), size);

        std::vector<EpdPos> epds = parseEpdFile(epdString);
        positions = getPositions(epds);
    }

    double kValue = computeKValue(threadPool, defaultParams, positions);
    std::cout << "Final kValue: " << kValue;

    localSearch(threadPool, kValue, defaultParams, positions, out);
}
