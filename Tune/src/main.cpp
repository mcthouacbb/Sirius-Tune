#include "eval_params.h"

#include "pos.h"
#include "optimize.h"
#include "extract.h"

#include <iostream>
#include <fstream>
#include <sstream>


EvalParams defaultParams = {
    {
        {
             148,   76,  110,   93,  116,  103,   65,   85, 
              54,  128,   83,   53,   72,  109,   17,  -21, 
              53,  122,   35,   62,    6,   72,   85,  -14, 
               4,   15,   38,   -6,  -23,  -10,   -1,  -41, 
              32,   28,    9,  -74,  -47,  -74,  -35,  -79, 
              12,   18,  -66,  -77,  -83,  -56,  -17,  -38, 
              38,  -16,  -31,  -83,  -64,  -33,   13,   11, 
             -43,   24,   -2,  -69,   -2,  -36,   24,   23, 

             994, 1025, 1062, 1088, 1120, 1112, 1029, 1024, 
            1012, 1007, 1014,  990, 1002, 1137, 1067, 1169, 
            1012, 1019, 1053, 1060, 1081, 1120, 1149, 1090, 
            1006, 1015, 1028, 1029, 1030, 1035, 1014, 1046, 
            1009, 1024, 1018, 1022, 1036, 1027, 1038, 1020, 
            1014, 1029, 1017, 1025, 1023, 1027, 1034, 1026, 
            1008, 1029, 1030, 1029, 1034, 1046, 1049, 1030, 
            1025, 1010, 1019, 1032, 1013,  998,  977, 1013, 

             539,  540,  572,  576,  610,  617,  553,  522, 
             501,  493,  532,  566,  526,  578,  581,  558, 
             496,  497,  507,  527,  550,  560,  572,  545, 
             463,  480,  503,  519,  496,  508,  521,  521, 
             462,  459,  463,  477,  488,  475,  496,  477, 
             450,  465,  474,  483,  479,  468,  502,  478, 
             445,  467,  466,  470,  475,  479,  492,  420, 
             464,  468,  485,  487,  491,  477,  447,  459, 

             340,  329,  344,  298,  255,  325,  366,  327, 
             347,  393,  365,  376,  393,  444,  390,  409, 
             356,  378,  433,  397,  445,  425,  417,  411, 
             345,  364,  395,  405,  399,  380,  372,  368, 
             365,  382,  376,  399,  404,  375,  379,  348, 
             385,  386,  382,  374,  379,  384,  379,  380, 
             359,  390,  376,  367,  370,  394,  401,  375, 
             371,  351,  359,  351,  347,  342,  367,  357, 

             137,  293,  313,  294,  397,  240,  238,  248, 
             290,  341,  438,  380,  450,  440,  368,  363, 
             356,  377,  388,  422,  460,  495,  430,  367, 
             365,  367,  368,  404,  373,  401,  353,  380, 
             341,  357,  368,  366,  377,  373,  363,  328, 
             329,  345,  361,  365,  369,  357,  371,  330, 
             327,  326,  345,  349,  351,  365,  350,  342, 
             301,  324,  305,  324,  323,  333,  321,  281, 

               0,    0,    0,    0,    0,    0,    0,    0, 
             117,  137,  101,  131,  161,  157,  103,   56, 
              53,   75,  103,   95,  112,  145,   89,   53, 
              66,   88,   82,   95,  106,   90,   88,   53, 
              48,   78,   75,   94,   92,   80,   89,   51, 
              51,   75,   79,   73,   90,   69,  115,   70, 
              45,   83,   64,   61,   73,  102,  126,   64, 
               0,    0,    0,    0,    0,    0,    0,    0, 
        },
        {
             -78,  -34,  -39,  -28,  -30,  -20,  -20,  -52, 
             -28,  -14,  -11,   -7,   -8,    6,   17,    7, 
             -22,   -7,    5,    0,   12,   16,   20,   10, 
             -25,   -2,    5,   16,   18,   23,   17,    7, 
             -39,  -10,    9,   28,   28,   31,   14,    4, 
             -33,   -8,   19,   29,   33,   26,    9,   -3, 
             -33,   -7,   10,   24,   22,   16,   -1,  -19, 
             -34,  -29,  -18,   -9,  -36,  -11,  -30,  -57, 

             948,  954,  946,  950,  921,  934,  937,  966, 
             947,  955,  969, 1008,  997,  973,  982,  854, 
             926,  947,  957,  956,  993,  940,  913,  919, 
             933,  961,  956,  980,  997,  998,  988,  952, 
             937,  948,  954,  984,  968,  960,  956,  944, 
             908,  905,  963,  943,  959,  952,  955,  926, 
             936,  934,  924,  937,  927,  897,  889,  902, 
             915,  913,  916,  877,  930,  911,  924,  888, 

             512,  508,  500,  497,  486,  484,  502,  506, 
             515,  527,  514,  503,  508,  501,  495,  493, 
             515,  516,  511,  506,  499,  495,  494,  493, 
             515,  512,  512,  506,  509,  505,  497,  493, 
             509,  514,  516,  517,  510,  507,  495,  492, 
             502,  507,  506,  505,  506,  504,  487,  493, 
             507,  504,  514,  511,  506,  504,  499,  512, 
             503,  514,  511,  517,  503,  499,  514,  482, 

             275,  263,  268,  285,  290,  281,  268,  282, 
             270,  281,  281,  271,  280,  263,  281,  245, 
             289,  284,  278,  289,  272,  291,  280,  266, 
             291,  296,  288,  296,  295,  286,  285,  271, 
             277,  281,  298,  289,  291,  297,  275,  271, 
             263,  281,  288,  295,  297,  286,  271,  265, 
             273,  263,  272,  282,  287,  271,  271,  259, 
             253,  273,  253,  279,  278,  273,  259,  264, 

             249,  222,  248,  257,  233,  246,  249,  183, 
             250,  260,  243,  261,  234,  242,  238,  223, 
             244,  257,  285,  278,  253,  252,  242,  248, 
             261,  284,  288,  298,  298,  285,  284,  251, 
             261,  271,  289,  291,  296,  278,  261,  265, 
             256,  272,  274,  284,  286,  272,  260,  246, 
             243,  251,  265,  276,  268,  258,  253,  242, 
             218,  241,  261,  267,  259,  263,  237,  248, 

               0,    0,    0,    0,    0,    0,    0,    0, 
             283,  280,  263,  228,  214,  232,  277,  275, 
             204,  201,  185,  166,  153,  142,  178,  186, 
             131,  120,  109,   95,   90,   98,  112,  117, 
             111,  105,   87,   87,   88,   88,   96,   98, 
             101,  101,   88,   97,   94,   95,   93,   93, 
             113,  104,  108,  109,  104,   98,   93,   90, 
               0,    0,    0,    0,    0,    0,    0,    0, 
        },
        26, 24,
        16, 47
    },
};

constexpr int NUM_THREADS = 3;
constexpr double K_VALUE = 3.81492;

int main()
{
    printParams(defaultParams, std::cout);

    extractMaterial(defaultParams);
    std::array<std::array<int, 6>, 2> normMaterial;
    EvalParams normParams = defaultParams;
    normBytes(normParams, normMaterial);

    std::vector<uint128_t> compressed = compressPsts(normParams, normMaterial);
    std::cout << "Compressed: {";
    for (auto& decimal : compressed)
    {
        std::cout << decimal << "m, ";
    }
    std::cout << "}\n";

    std::vector<ErrorThread> threadPool(NUM_THREADS);

    std::string outFile, inFile;
    std::string str;
    std::getline(std::cin, str);
    std::istringstream stream(str);
    stream >> inFile >> outFile;

    std::ifstream in(inFile);
    std::ofstream out(outFile);


    std::vector<Position> positions;
    {
        in.seekg(0, std::ios::end);
        size_t size = in.tellg();
        std::string epdString(size, '\0');
        in.seekg(0);
        in.read(epdString.data(), size);

        std::vector<EpdPos> epds = parseEpdFile(epdString);
        positions = getPositions(epds);
    }

    // double kValue = computeKValue(K_VALUE, threadPool, defaultParams, positions);
    double kValue = K_VALUE;
    std::cout << "Final kValue: " << kValue << std::endl;

    localSearch(threadPool, kValue, defaultParams, positions, out);
}
