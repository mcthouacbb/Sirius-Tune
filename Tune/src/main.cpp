#include "eval_params.h"

#include "pos.h"
#include "optimize.h"

#include <iostream>
#include <fstream>
#include <sstream>


EvalParams defaultParams = {
    {
        { 0, 41, 18, 16, 6, 0 },
        { 0, 794, 370, 291, 265, 70 },
        { 0, 749, 411, 225, 204, 101 },
        {
            {
                   5,   67,   14,  -10,  -10,   14,   67,    5,
                 -21,    2,   19,   39,   39,   19,    2,  -21,
                  -4,   52,   59,   19,   19,   59,   52,   -4,
                 -44,  -18,  -27,  -38,  -38,  -27,  -18,  -44,
                 -71,  -45,  -63,  -83,  -83,  -63,  -45,  -71,
                 -34,  -25,  -51,  -69,  -69,  -51,  -25,  -34,
                  10,    2,  -36,  -61,  -61,  -36,    2,   10,
                  12,   23,  -24,   -2,   -2,  -24,   23,   12,
            },
            {
                  -4,   13,   41,   43,   43,   41,   13,   -4,
                  -6,  -30,   11,  -14,  -14,   11,  -30,   -6,
                  15,   16,   12,    6,    6,   12,   16,   15,
                  -7,  -22,   -2,  -13,  -13,   -2,  -22,   -7,
                  -8,  -10,  -10,  -13,  -13,  -10,  -10,   -8,
                 -12,    4,   -7,   -8,   -8,   -7,    4,  -12,
                 -24,   -8,   12,   -3,   -3,   12,   -8,  -24,
                  -7,  -18,  -15,    3,    3,  -15,  -18,   -7,
            },
            {
                  26,   37,   11,   57,   57,   11,   37,   26,
                  18,   24,   64,   64,   64,   64,   24,   18,
                  -9,   22,   22,   17,   17,   22,   22,   -9,
                 -27,  -14,    5,   10,   10,    5,  -14,  -27,
                 -34,  -20,  -20,   -8,   -8,  -20,  -20,  -34,
                 -42,  -22,  -20,  -18,  -18,  -20,  -22,  -42,
                 -53,  -19,  -20,  -15,  -15,  -20,  -19,  -53,
                 -26,  -26,  -11,    1,    1,  -11,  -26,  -26,
            },
            {
                 -21,   -4,  -66,  -36,  -36,  -66,   -4,  -21,
                 -37,   10,    7,    2,    2,    7,   10,  -37,
                 -12,   26,   32,   26,   26,   32,   26,  -12,
                  -6,   -3,   18,   31,   31,   18,   -3,   -6,
                  -9,    2,    4,   18,   18,    4,    2,   -9,
                  -2,    7,   10,    5,    5,   10,    7,   -2,
                  -1,   13,    8,   -4,   -4,    8,   13,   -1,
                 -33,  -14,  -15,  -20,  -20,  -15,  -14,  -33,
            },
            {
                -128,  -60,  -59,    0,    0,  -59,  -60, -128,
                 -46,  -16,   57,   18,   18,   57,  -16,  -46,
                  -2,   60,   47,   64,   64,   47,   60,   -2,
                  12,   14,   32,   33,   33,   32,   14,   12,
                  -9,   10,   14,   15,   15,   14,   10,   -9,
                 -13,    6,   12,   12,   12,   12,    6,  -13,
                 -18,  -29,   -2,    0,    0,   -2,  -29,  -18,
                 -51,  -13,  -30,  -21,  -21,  -30,  -13,  -51,
            },
            {
                 -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
                  21,   61,   60,   77,   77,   60,   61,   21,
                 -25,   -2,   25,   30,   30,   25,   -2,  -25,
                 -26,    0,   -4,    7,    7,   -4,    0,  -26,
                 -33,  -11,  -14,    2,    2,  -14,  -11,  -33,
                 -27,   -4,  -12,  -12,  -12,  -12,   -4,  -27,
                 -35,   -2,  -12,  -26,  -26,  -12,   -2,  -35,
                 -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
            },
        },
        {
            {
                 -35,  -26,   -9,  -16,  -16,   -9,  -26,  -35,
                   1,   10,   11,   -1,   -1,   11,   10,    1,
                   3,   13,   12,    4,    4,   12,   13,    3,
                  -1,   16,   22,   20,   20,   22,   16,   -1,
                  -6,    6,   22,   28,   28,   22,    6,   -6,
                  -9,    2,   14,   22,   22,   14,    2,   -9,
                 -23,  -10,    5,   14,   14,    5,  -10,  -23,
                 -50,  -30,  -14,  -28,  -28,  -14,  -30,  -50,
            },
            {
                  -6,    0,   -6,    0,    0,   -6,    0,   -6,
                 -14,   20,   18,   41,   41,   18,   20,  -14,
                 -18,  -10,   10,   38,   38,   10,  -10,  -18,
                   6,   34,   17,   40,   40,   17,   34,    6,
                  -9,   21,   17,   33,   33,   17,   21,   -9,
                  -6,  -24,    7,    2,    2,    7,  -24,   -6,
                 -26,  -30,  -42,  -15,  -15,  -42,  -30,  -26,
                 -40,  -28,  -30,  -44,  -44,  -30,  -28,  -40,
            },
            {
                   2,   -1,    9,    0,    0,    9,   -1,    2,
                   3,    2,   -6,   -6,   -6,   -6,    2,    3,
                   1,   -2,   -2,    0,    0,   -2,   -2,    1,
                   2,   -1,    4,   -2,   -2,    4,   -1,    2,
                  -2,   -1,    2,   -2,   -2,    2,   -1,   -2,
                  -6,   -4,   -6,   -4,   -4,   -6,   -4,   -6,
                  -2,   -7,   -4,   -3,   -3,   -4,   -7,   -2,
                 -11,    1,   -2,   -3,   -3,   -2,    1,  -11,
            },
            {
                 -12,  -12,    2,    0,    0,    2,  -12,  -12,
                   0,   -3,   -1,   -4,   -4,   -1,   -3,    0,
                   5,   -4,    2,   -2,   -2,    2,   -4,    5,
                   2,    9,    9,    9,    9,    9,    9,    2,
                  -2,    3,   11,   12,   12,   11,    3,   -2,
                  -7,   -2,    6,   12,   12,    6,   -2,   -7,
                 -17,  -12,   -6,    5,    5,   -6,  -12,  -17,
                 -11,   -5,  -16,   -3,   -3,  -16,   -5,  -11,
            },
            {
                 -38,  -22,    0,  -10,  -10,    0,  -22,  -38,
                 -13,    1,  -11,    8,    8,  -11,    1,  -13,
                 -14,   -8,   16,   11,   11,   16,   -8,  -14,
                  -4,   15,   26,   30,   30,   26,   15,   -4,
                  -4,   11,   24,   28,   28,   24,   11,   -4,
                  -9,    1,    8,   20,   20,    8,    1,   -9,
                 -22,   -5,   -1,    6,    6,   -1,   -5,  -22,
                 -24,  -32,   -6,   -4,   -4,   -6,  -32,  -24,
            },
            {
                 -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
                 127,  113,   92,   79,   79,   92,  113,  127,
                  48,   50,   25,   19,   19,   25,   50,   48,
                  -7,  -12,  -20,  -28,  -28,  -20,  -12,   -7,
                 -23,  -23,  -32,  -35,  -35,  -32,  -23,  -23,
                 -30,  -25,  -32,  -27,  -27,  -32,  -25,  -30,
                 -25,  -23,  -24,  -19,  -19,  -24,  -23,  -25,
                 -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
            },
        },
    }
};

constexpr int NUM_THREADS = 3;

int main()
{
    std::string outFile, inFile;
    std::string str;
    std::getline(std::cin, str);
    std::istringstream stream(str);
    stream >> inFile >> outFile;

    std::ifstream in(inFile);
    std::ofstream out(outFile);

    in.seekg(0, std::ios::end);
    size_t size = in.tellg();
    std::string epdString(size, '\0');
    in.seekg(0);
    in.read(epdString.data(), size);

    std::vector<Pos> positions = parseEpdFile(epdString);

    std::vector<ErrorThread> threadPool(NUM_THREADS);
    double kValue = computeKValue(threadPool, defaultParams, positions);
    std::cout << "Final kValue: " << kValue;

    localSearch(threadPool, kValue, defaultParams, positions, out);
}
